{
  "_args": [
    [
      {
        "raw": "bower-resolve@^2.2.1",
        "scope": null,
        "escapedName": "bower-resolve",
        "name": "bower-resolve",
        "rawSpec": "^2.2.1",
        "spec": ">=2.2.1 <3.0.0",
        "type": "range"
      },
      "E:\\MyPortal\\node_modules\\karma-bower"
    ]
  ],
  "_from": "bower-resolve@>=2.2.1 <3.0.0",
  "_id": "bower-resolve@2.2.1",
  "_inCache": true,
  "_location": "/bower-resolve",
  "_npmUser": {
    "name": "eugeneware",
    "email": "eugene@noblesamurai.com"
  },
  "_npmVersion": "1.4.28",
  "_phantomChildren": {},
  "_requested": {
    "raw": "bower-resolve@^2.2.1",
    "scope": null,
    "escapedName": "bower-resolve",
    "name": "bower-resolve",
    "rawSpec": "^2.2.1",
    "spec": ">=2.2.1 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/karma-bower"
  ],
  "_resolved": "https://registry.npmjs.org/bower-resolve/-/bower-resolve-2.2.1.tgz",
  "_shasum": "58a75e0a954b5721a7ef2b26aeae5cbdc8a39f01",
  "_shrinkwrap": null,
  "_spec": "bower-resolve@^2.2.1",
  "_where": "E:\\MyPortal\\node_modules\\karma-bower",
  "author": "",
  "bugs": {
    "url": "https://github.com/eugeneware/bower-resolve/issues"
  },
  "dependencies": {
    "bower": "^1.3.2"
  },
  "description": "Find the relative path name of a bower module, for use with browserify and other build tools",
  "devDependencies": {
    "expect.js": "^0.3.1",
    "mocha": "^1.18.2"
  },
  "directories": {},
  "dist": {
    "shasum": "58a75e0a954b5721a7ef2b26aeae5cbdc8a39f01",
    "tarball": "https://registry.npmjs.org/bower-resolve/-/bower-resolve-2.2.1.tgz"
  },
  "gitHead": "33270d3700de9be69166474516953950b0c714be",
  "homepage": "https://github.com/eugeneware/bower-resolve#readme",
  "keywords": [
    "browserify",
    "bower",
    "debowerify",
    "commonjs",
    "transform",
    "node-browserify",
    "bower.io"
  ],
  "license": "BSD-3-Clause",
  "main": "index.js",
  "maintainers": [
    {
      "name": "eugeneware",
      "email": "eugene@noblesamurai.com"
    }
  ],
  "name": "bower-resolve",
  "optionalDependencies": {},
  "readme": "# bower-resolve\n\nFind the relative path name of a bower module, for use with [browserify](https://github.com/substack/node-browserify) and [debowerify](https://github.com/eugeneware/debowerify).\n\n[![build status](https://secure.travis-ci.org/eugeneware/bower-resolve.png)](http://travis-ci.org/eugeneware/bower-resolve)\n\n## Installation\n\nThis module is installed via npm:\n\n``` bash\n$ npm install bower-resolve\n```\n\n## Example Usage\n\nFirst, install some bower modules:\n\n``` bash\n$ bower install js-base64\n```\n\nThen to resolve the path of the main javascript file for a given bower module name:\n\n\n``` js\nvar bowerResolve = require('bower-resolve');\n\n//Option 1, using a port of bower's internal resolve algorithm\nbowerResolve.fastRead('js-base64', function(modulePath){\n    //equals %cwd%/bower_components/js-base64/base64.js \n})\n\n//Option 2, using module list provided by bower's programmatic API \nbowerResolve.init(function () {\n  bowerResolve('js-base64')\n  // returns %cwd%/bower_components/js-base64/base64.js'\n});\n```\n\n## Usage with browserify/debowerify\n\nThis is useful for generating stand-alone libraries with\n[browserify](https://github.com/substack/node-browserify) with the\n[debowerify](https://github.com/eugeneware/debowerify) transform:\n\nLet's say you have installed angularjs and jquery using bower:\n\n``` bash\n$ bower install jquery\n$ bower install angular\n```\n\nYou can build out a common library that will contain the jquery and angular\nlibraries into a file called common.js like so:\n\n``` js\n// build out angular and jquery to a library file called common.js\nvar fs = require('fs');\nvar browserify = require('browserify');\nvar bowerResolve = require('bower-resolve');\nbowerResolve.init(function () {\n  var b = browserify();\n  b.require(bowerResolve('angular'), { expose: 'angular' });\n  b.require(bowerResolve('jquery'), { expose: 'jquery' });\n  b.bundle().pipe(fs.createWriteStream('./common.js'));\n});\n```\n\nSimilarly, if you have some other client-side code that you want to rely on\nthis common code, you can use bowerResolve to help you there, by declaring them\nas external dependencies:\n\n``` js\n// app.js\nvar angular = require('angular');\nvar jQuery = require('jquery');\n\njQuery(function ($) {\n  console.log(angular);\n});\n```\n\nThen build it out using browserify and debowerify as so:\n\n``` js\n// build out app.js and use the angular and jquery libs from common.js\nvar fs = require('fs');\nvar browserify = require('browserify');\nvar bowerResolve = require('bower-resolve');\nbowerResolve.init(function () {\n  var b = browserify(['./app.js']);\n  b.external(bowerResolve('angular'));\n  b.external(bowerResolve('jquery'));\n  b.transform('debowerify');\n  b.bundle().pipe(fs.createWriteStream('./bundle.js'));\n});\n```\n\nThen you'll have `common.js` that will have your shared code, and `bundle.js`\nwill have your client code.\n\nThen you can use them together from your HTML app as follows:\n\n``` html\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Hello, bower</title>\n  </head>\n  <body>\n    <script type=\"text/javascript\" src=\"common.js\"></script>\n    <script type=\"text/javascript\" src=\"bundle.js\"></script>\n  </body>\n</html>\n```\n\n## Disable version checking\n\nBower module is doing check for new versions of installed components when \n`bowerResolve.init` is called. You might want to prevent this behavior. Check\nis made using Git client, which needs to be installed and available system wide \n(that might be an issue on Windows). Otherwise whole process will just fail\nwithout much useful error message. To disable version checking, use the \nfollowing:\n\n```js\nvar bowerResolve = require('bower-resolve');\nbowerResolve.offline = true;\nbowerResolve.init(function() {....}};\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/eugeneware/bower-resolve.git"
  },
  "scripts": {
    "test": "mocha --ui bdd --reporter spec"
  },
  "version": "2.2.1"
}
